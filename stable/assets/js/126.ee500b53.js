(window.webpackJsonp=window.webpackJsonp||[]).push([[126],{599:function(t,e,a){"use strict";a.r(e);var s=a(18),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"discovery-service-configuration-parameters"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#discovery-service-configuration-parameters"}},[t._v("#")]),t._v(" Discovery Service configuration parameters")]),t._v(" "),a("h2",{attrs:{id:"zowe-runtime-configuration-parameters"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#zowe-runtime-configuration-parameters"}},[t._v("#")]),t._v(" Zowe runtime configuration parameters")]),t._v(" "),a("p",[t._v("As an application developer who wants to run Zowe, set the following parameters during the Zowe runtime configuration by modifying the "),a("code",[t._v("<Zowe install directory>/components/discovery/bin/start.sh")]),t._v(" file:")]),t._v(" "),a("ul",[a("li",[a("strong",[a("a",{attrs:{href:"#api-ml-configuration"}},[t._v("API ML configuration")])])]),t._v(" "),a("li",[a("strong",[a("a",{attrs:{href:"#eureka-configuration"}},[t._v("Eureka configuration")])])])]),t._v(" "),a("h2",{attrs:{id:"api-ml-configuration"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-ml-configuration"}},[t._v("#")]),t._v(" API ML configuration")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("apiml.discovery.userid")])]),t._v(" "),a("p",[t._v("The Discovery service in HTTP mode protects it's endpoints with basic authentication instead of client certificate. This parameter  specifies the userid. The default value is "),a("code",[t._v("eureka")]),t._v(".")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("apiml.discovery.password")])]),t._v(" "),a("p",[t._v("This parameter specifies the password for the basic authentication used by the Discovery Service in HTTP mode. The default value is "),a("code",[t._v("password")]),t._v(".")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("apiml.discovery.allPeersUrls")])]),t._v(" "),a("p",[t._v("This parameter contains the list of URLs of the Discovery Service in case of multiple instances of the service on different host.\n"),a("strong",[t._v("Example:")])]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiml")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("discovery")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("allPeersUrls")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" https"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//localhost2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("10021/eureka/"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("https"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//localhost3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("10031/eureka/\n")])])]),a("p",[a("strong",[t._v("Note:")]),t._v(" Each URL within the list must be separated by a comma.")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("apiml.discovery.staticApiDefinitionsDirectories")])]),t._v(" "),a("p",[t._v("The static definition directories can be specified as a parameter at startup and will be scanned by the Discovery Service. These directories contains the definitions of static services.\n"),a("strong",[t._v("Example:")]),t._v("\n```yaml\napiml:\ndiscovery:\nstaticApiDefinitionsDirectories: config/local/api-defs;config/local2/api-defs")])])]),t._v(" "),a("h2",{attrs:{id:"eureka-configuration"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#eureka-configuration"}},[t._v("#")]),t._v(" Eureka configuration")]),t._v(" "),a("p",[t._v("The Discovery Service contains a configuration for implementing the client-side service discovery and for defining a Eureka Server for service registry. Such configuration is shown below:")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("eureka")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("instance")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hostname")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("apiml.service.hostname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ipAddress")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("apiml.service.ipAddress"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("server.port"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("securePort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nonSecurePortEnabled")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("securePortEnabled")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("preferIpAddress")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("apiml.service.preferIpAddress"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("statusPageUrl")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" http"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("apiml.service.hostname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("apiml.service.port"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("/application/info\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("healthCheckUrl")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" http"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("apiml.service.hostname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("apiml.service.port"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("/application/health\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("client")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("registerWithEureka")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("fetchRegistry")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("region")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" default\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("serviceUrl")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("defaultZone")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("apiml.discovery.allPeersUrls"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("server")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("useReadOnlyResponseCache")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v("\n")])])]),a("ul",[a("li",[a("p",[a("strong",[t._v("eureka.client.registerWithEureka")]),t._v("\nIf we make this property as true then while the server starts the inbuilt client will try to register itself with the Eureka server.")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("eureka.client.registerWithEureka")]),t._v("\nThe inbuilt client will try to fetch the Eureka registry if we configure this property as true.")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("eureka.client.serviceUrl.defaultZone")]),t._v("\nA fallback value that provides the Eureka service URL for any client that does not express a preference (in other words, it is a useful default).")])])]),t._v(" "),a("p",[t._v("More information about the other Eureka parameters can be found in the "),a("a",{attrs:{href:"https://cloud.spring.io/spring-cloud-netflix/multi/multi__service_discovery_eureka_clients.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spring Cloud Netflix Eureka documentation"),a("OutboundLink")],1),t._v(".")])])}),[],!1,null,null,null);e.default=n.exports}}]);